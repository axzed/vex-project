syntax = "proto3";
package task;
option go_package = "project-project/pkg/service/task";

message TaskReqMessage{
  int64 memberId = 1;
  string projectCode = 2;
  int64 page = 3;
  int64 pageSize = 4;
  string stageCode = 5;
  string name = 6;
  string assignTo = 7;
  int32 taskType = 8;
  int32 type = 9;
  string preTaskCode = 10;
  string nextTaskCode = 11;
  string toStageCode = 12;
}
message TaskStagesMessage{
  string code = 1;
  string name = 2;
  string projectCode = 3;
  int32 sort = 4;
  string description = 5;
  string createTime = 6;
  int32 deleted = 7;
  int32 id = 8;
}
message TaskStagesResponse{
  int64 total = 1;
  repeated TaskStagesMessage list = 2;
}

message MemberProjectMessage{
  string name = 1;
  string avatar = 2;
  int64 memberCode = 3;
  string code = 4;
  string email = 5;
  int32 isOwner = 6;
}

message MemberProjectResponse{
  int64 total = 1;
  repeated MemberProjectMessage list = 2;
}

message TaskMessage{
  int64 Id  = 1;
  string ProjectCode  = 2;
  string Name  = 3;
  int32 Pri  = 4;
  string ExecuteStatus  = 5;
  string Description  = 6;
  string CreateBy  = 7;
  string DoneBy  = 8;
  string DoneTime  = 9;
  string CreateTime  = 10;
  string AssignTo  = 11;
  int32 Deleted  = 12;
  string StageCode  = 13;
  string TaskTag  = 14;
  int32 Done  = 15;
  string BeginTime  = 16;
  string EndTime  = 17;
  string RemindTime  = 18;
  string Pcode  = 19;
  int32 Sort  = 20;
  int32 Like  = 21;
  int32 Star  = 22;
  string DeletedTime  = 23;
  int32 Private  = 24;
  int32 IdNum  = 25;
  string Path  = 26;
  int32 Schedule  = 27;
  string VersionCode  = 28;
  string FeaturesCode  = 29;
  int32 WorkTime  = 30;
  int32 Status  = 31;
  string code = 32;
  int32 canRead = 33;
  ExecutorMessage executor = 34;
  string projectName = 35;
}

message ExecutorMessage {
  string Name = 1;
  string Avatar = 2;
  string code = 3;
}

message TaskListResponse{
  repeated TaskMessage list = 1;
}

message TaskSortResponse{}

message MyTaskMessage{
  int64 Id  = 1;
  string ProjectCode  = 2;
  string Name  = 3;
  int32 Pri  = 4;
  string ExecuteStatus  = 5;
  string Description  = 6;
  string CreateBy  = 7;
  string DoneBy  = 8;
  string DoneTime  = 9;
  string CreateTime  = 10;
  string AssignTo  = 11;
  int32 Deleted  = 12;
  string StageCode  = 13;
  string TaskTag  = 14;
  int32 Done  = 15;
  string BeginTime  = 16;
  string EndTime  = 17;
  string RemindTime  = 18;
  string Pcode  = 19;
  int32 Sort  = 20;
  int32 Like  = 21;
  int32 Star  = 22;
  string DeletedTime  = 23;
  int32 Private  = 24;
  int32 IdNum  = 25;
  string Path  = 26;
  int32 Schedule  = 27;
  string VersionCode  = 28;
  string FeaturesCode  = 29;
  int32 WorkTime  = 30;
  int32 Status  = 31;
  string code = 32;
  string Cover = 33;
  string AccessControlType = 34;
  string WhiteList = 35;
  int32 Order =36;
  string TemplateCode = 37;
  string OrganizationCode = 38;
  string Prefix = 39;
  int32 OpenPrefix = 40;
  int32 Archive = 41;
  int64 ArchiveTime = 42;
  int32 OpenBeginTime = 43;
  int32 OpenTaskPrivate = 44;
  string TaskBoardTheme = 45;
  int32 AutoUpdateSchedule = 46;
  ExecutorMessage executor = 47;
  string projectName = 48;
}

message MyTaskListResponse{
  repeated MyTaskMessage list = 1;
  int64  total = 2;
}

service TaskService {
  rpc TaskStages(TaskReqMessage) returns (TaskStagesResponse){}
  rpc MemberProjectList(TaskReqMessage) returns (MemberProjectResponse){}
  rpc TaskList(TaskReqMessage) returns (TaskListResponse){}
  rpc SaveTask(TaskReqMessage) returns(TaskMessage){}
  rpc TaskSort(TaskReqMessage) returns (TaskSortResponse){}
  rpc MyTaskList(TaskReqMessage) returns (MyTaskListResponse){}
}